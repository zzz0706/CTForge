{
  "average_line_coverage": 0.0,
  "average_branch_coverage": 0.0,
  "details": [
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/JceAesCtrCryptoCodec.java",
      "method": "public void setConf(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/JceAesCtrCryptoCodec.java",
      "method": "public void generateSecureRandom(byte[] bytes) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java",
      "method": "private void parseStaticMapping(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/file/tfile/TFile.java",
      "method": "static int getFSInputBufferSize(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java",
      "method": "private static String getName(IdCache domain, int id) throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java",
      "method": "public static Stat getFstat(FileDescriptor fd) throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "method": "private static FilterInitializer[] getFilterInitializers(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "method": "public HttpServer2 build() throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/JceAesCtrCryptoCodec.java",
      "method": "public void setConf(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "method": "public AuthMethod run()",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "method": "public Writable get(long timeout, TimeUnit unit)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "method": "public boolean isDone() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
      "method": "private Configuration readSSLConfiguration(Mode mode) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "method": "public void setConf(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "method": "private int checkHealth(final CommandLine cmd)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "method": "public int run(String[] argv) throws Exception {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "method": "protected int runCmd(String[] argv) throws Exception {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "method": "private int getServiceState(final CommandLine cmd)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "method": "protected int getAllServiceState() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java",
      "method": "public void refresh() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java",
      "method": "public List<String> getGroups(final String user) throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ChecksumFileSystem.java",
      "method": "private int getSumBufferSize(int bytesPerSum, int bufferSize) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
      "method": "public void init() throws GeneralSecurityException, IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
      "method": "public SSLEngine createSSLEngine()",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/CryptoCodec.java",
      "method": "public static CryptoCodec getInstance(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "method": "public void initialize(Configuration conf, FileSystem fs) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "method": "public Runnable getEmptier() throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "method": "protected long getEmptierInterval() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/TableMapping.java",
      "method": "private Map<String, String> load() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/TableMapping.java",
      "method": "public synchronized List<String> resolve(List<String> names) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/TableMapping.java",
      "method": "public void reloadCachedMappings() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "method": "public LinkedBlockingQueue<E> load(String keyName)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "method": "public void initializeQueuesForKeys(String... keyNames)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "method": "public void drain(String keyName ) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "method": "public int getSize(String keyName) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "method": "public List<E> getAtMost(String keyName, int num) throws IOException,",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "method": "public void initialize(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
      "method": "public void init() throws GeneralSecurityException, IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
      "method": "public void destroy() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
      "method": "public KeyStoresFactory getKeystoresFactory() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
      "method": "protected void run() throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
      "method": "public void execute() throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
      "method": "private void runCommand() throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
      "method": "private Configuration readSSLConfiguration(Mode mode) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/file/tfile/TFile.java",
      "method": "static int getFSOutputBufferSize(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/BytesWritable.java",
      "method": "public void setCapacity(int new_cap) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "method": "public void initialize(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java",
      "method": "private void validateKinitExecutable() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java",
      "method": "public boolean execute() throws Exception {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "method": "private void spawnAutoRenewalThreadForUserCreds() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "method": "static void loginUserFromSubject(Subject subject) throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "method": "public static final int getRpcTimeout(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
      "method": "public static int getRpcTimeout(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ConfigRedactor.java",
      "method": "private boolean configIsSensitive(String key) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ConfigRedactor.java",
      "method": "public String redact(String key, String value) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SecurityUtil.java",
      "method": "private static int getSlowLookupThresholdMs() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
      "method": "private void handleChecksumException(ChecksumException e)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
      "method": "public synchronized void sync(long position) throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "method": "public FsServerDefaults getServerDefaults() throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "method": "public int getBytesPerChecksum() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "method": "public void write(DataOutput out) throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
      "method": "public static SocketFactory getDefaultSocketFactory(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
      "method": "public void init() throws GeneralSecurityException, IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslPropertiesResolver.java",
      "method": "public void setConf(Configuration conf) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslPropertiesResolver.java",
      "method": "public Map<String,String> getDefaultProperties() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslPropertiesResolver.java",
      "method": "public Map<String, String> getServerProperties(InetAddress clientAddress){",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslPropertiesResolver.java",
      "method": "public Map<String, String> getClientProperties(InetAddress serverAddress){",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcClient.java",
      "method": "private SaslClient createSaslClient(SaslAuth authType)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
      "method": "public synchronized void append(Object key, Object val)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/ValueQueue.java",
      "method": "public LinkedBlockingQueue<E> load(String keyName)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/ValueQueue.java",
      "method": "public void initializeQueuesForKeys(String... keyNames)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/ValueQueue.java",
      "method": "public void drain(String keyName ) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/ValueQueue.java",
      "method": "public int getSize(String keyName) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/ValueQueue.java",
      "method": "public List<E> getAtMost(String keyName, int num) throws IOException,",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    }
  ]
}