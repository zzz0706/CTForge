{
  "average_sc": 0.603,
  "average_bc": 0.506,
  "details": [
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java",
      "method": "public static boolean usesSharedEditsDir(Configuration conf) {",
      "sc": 1.0,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "method": "private static void checkConfiguration(Configuration conf)",
      "sc": 0.399,
      "bc": 0.386
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "method": "public static List<URI> getNamespaceEditsDirs(Configuration conf)",
      "sc": 0.982,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "method": "public static List<URI> getSharedEditsDirs(Configuration conf) {",
      "sc": 0.547,
      "bc": 0.349
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure.java",
      "method": "private static Policy getPolicy(final Configuration conf) {",
      "sc": 0.363,
      "bc": 0.257
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/ReplaceDatanodeOnFailure.java",
      "method": "public static ReplaceDatanodeOnFailure get(final Configuration conf) {",
      "sc": 0.989,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/DatanodeHttpServer.java",
      "method": "protected void initChannel(SocketChannel ch) throws Exception {",
      "sc": 0.39,
      "bc": 0.385
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/DatanodeHttpServer.java",
      "method": "public NioServerSocketChannel newChannel() {",
      "sc": 0.999,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/DatanodeHttpServer.java",
      "method": "protected void doBind(SocketAddress localAddress) throws Exception {}",
      "sc": 0.264,
      "bc": 0.116
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/DatanodeHttpServer.java",
      "method": "protected void initChannel(SocketChannel ch) throws Exception {",
      "sc": 0.79,
      "bc": 0.603
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "method": "public void startInfoServer() throws IOException {",
      "sc": 0.65,
      "bc": 0.647
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "method": "public FsServerDefaults getServerDefaults() throws StandbyException {",
      "sc": 0.901,
      "bc": 0.894
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java",
      "method": "public int getWritePacketSize() {",
      "sc": 0.876,
      "bc": 0.467
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "method": "private long computeTransferReadTimeout() {",
      "sc": 0.36,
      "bc": 0.255
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "method": "private void addDatanode2ExistingPipeline() throws IOException {",
      "sc": 0.338,
      "bc": 0.286
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
      "method": "private void initWritePacketSize() {",
      "sc": 0.339,
      "bc": 0.24
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
      "method": "private void adjustPacketChunkSize(HdfsFileStatus stat) throws IOException{",
      "sc": 0.136,
      "bc": 0.135
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "method": "static Collection<String> getInternalNameServices(Configuration conf) {",
      "sc": 0.144,
      "bc": 0.108
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "method": "public static Collection<URI> getInternalNsRpcUris(Configuration conf) {",
      "sc": 0.26,
      "bc": 0.233
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "method": "public static ShortCircuitCache fromConf(ShortCircuitConf conf) {",
      "sc": 0.028,
      "bc": 0.028
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "method": "private int demoteOldEvictableMmaped(long now) {",
      "sc": 0.746,
      "bc": 0.652
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "method": "public void run() {",
      "sc": 0.958,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "method": "public void close() {",
      "sc": 0.401,
      "bc": 0.4
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "method": "private void trimEvictionMaps() {",
      "sc": 0.809,
      "bc": 0.629
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "static InetSocketAddress getStreamingAddr(Configuration conf) {",
      "sc": 0.989,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "public String getDataPort(){",
      "sc": 0.672,
      "bc": 0.642
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "private void initDataXceiver(Configuration conf) throws IOException {",
      "sc": 0.894,
      "bc": 0.883
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/TrustedChannelResolver.java",
      "method": "public static TrustedChannelResolver getInstance(Configuration conf) {",
      "sc": 0.588,
      "bc": 0.29
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
      "method": "public static <T> T newInstance(Class<T> theClass, Configuration conf) {",
      "sc": 0.98,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "protected void startMetricsLogger(Configuration metricConf) {",
      "sc": 0.418,
      "bc": 0.396
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java",
      "method": "public long getSlowIoWarningThresholdMs() {",
      "sc": 0.698,
      "bc": 0.694
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "method": "public void run() {",
      "sc": 0.695,
      "bc": 0.695
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "method": "private List<AuditLogger> initAuditLoggers(Configuration conf) {",
      "sc": 0.584,
      "bc": 0.522
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "method": "public List<AuditLogger> getAuditLoggers() {",
      "sc": 0.78,
      "bc": 0.65
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
      "method": "public Void run() throws Exception {",
      "sc": 0.813,
      "bc": 0.731
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
      "method": "private void serveFile(File file) throws IOException {",
      "sc": 0.833,
      "bc": 0.833
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "private void initDataXceiver(Configuration conf) throws IOException {",
      "sc": 0.763,
      "bc": 0.755
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DNConf.java",
      "method": "public int getTransferSocketRecvBufferSize() {",
      "sc": 0.289,
      "bc": 0.146
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "private static String getHostName(Configuration config)",
      "sc": 0.709,
      "bc": 0.023
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockReportLeaseManager.java",
      "method": "private synchronized void pruneExpiredPending(long monotonicNowMs) {",
      "sc": 0.973,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockReportLeaseManager.java",
      "method": "public synchronized long requestLease(DatanodeDescriptor dn) {",
      "sc": 0.456,
      "bc": 0.451
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "method": "public void run() {",
      "sc": 0.879,
      "bc": 0.865
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "method": "static int run(Map<URI, List<Path>> namenodes, Configuration conf)",
      "sc": 0.733,
      "bc": 0.729
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
      "method": "private static void setTimeout(HttpURLConnection connection) {",
      "sc": 0.388,
      "bc": 0.387
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java",
      "method": "public boolean apply(URI input) {",
      "sc": 0.931,
      "bc": 0.526
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java",
      "method": "public boolean isResourceAvailable() {",
      "sc": 0.267,
      "bc": 0.257
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "method": "public void run () {",
      "sc": 0.257,
      "bc": 0.257
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "method": "public void stopMonitor() {",
      "sc": 0.299,
      "bc": 0.295
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java",
      "method": "public boolean apply(URI input) {",
      "sc": 0.758,
      "bc": 0.308
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java",
      "method": "public boolean hasAvailableDiskSpace() {",
      "sc": 0.981,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "private void checkSuperuserPrivilege() throws IOException, AccessControlException {",
      "sc": 0.234,
      "bc": 0.183
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "public void refreshNamenodes() throws IOException {",
      "sc": 0.953,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "public void deleteBlockPool(String blockPoolId, boolean force)",
      "sc": 0.938,
      "bc": 0.834
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "public synchronized void shutdownDatanode(boolean forUpgrade) throws IOException {",
      "sc": 0.318,
      "bc": 0.242
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "public void evictWriters() throws IOException {",
      "sc": 0.829,
      "bc": 0.827
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "public void startReconfiguration() throws IOException {",
      "sc": 0.723,
      "bc": 0.723
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "public ReconfigurationTaskStatus getReconfigurationStatus() throws IOException {",
      "sc": 0.757,
      "bc": 0.757
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "public void triggerBlockReport(BlockReportOptions options)",
      "sc": 0.452,
      "bc": 0.226
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CheckpointConf.java",
      "method": "public long getCheckPeriod() {",
      "sc": 0.688,
      "bc": 0.653
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "method": "public void doWork() {",
      "sc": 0.912,
      "bc": 0.771
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java",
      "method": "private void doWork() {",
      "sc": 0.707,
      "bc": 0.519
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java",
      "method": "public void run() {",
      "sc": 0.049,
      "bc": 0.048
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java",
      "method": "public Object run() {",
      "sc": 0.555,
      "bc": 0.403
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "private static String getHostName(Configuration config)",
      "sc": 0.779,
      "bc": 0.5
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "method": "public String getNamenodeAddresses() {",
      "sc": 0.471,
      "bc": 0.055
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "method": "private Map<String, ScanInfo[]> getDiskReport() {",
      "sc": 0.76,
      "bc": 0.443
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "method": "private void scan() {",
      "sc": 0.162,
      "bc": 0.102
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "method": "private void updateCurrentKey() throws IOException {",
      "sc": 0.877,
      "bc": 0.137
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "method": "public HostConfigManager getHostConfigManager() {",
      "sc": 0.732,
      "bc": 0.345
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "method": "public void registerDatanode(DatanodeRegistration nodeReg)",
      "sc": 0.337,
      "bc": 0.336
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "method": "private void manageWriterOsCache(long offsetInBlock) {",
      "sc": 0.51,
      "bc": 0.494
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java",
      "method": "public void run() {",
      "sc": 0.583,
      "bc": 0.564
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "method": "private void doWork() {",
      "sc": 0.104,
      "bc": 0.104
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "method": "public void run() {",
      "sc": 0.206,
      "bc": 0.205
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "method": "public Object run() {",
      "sc": 0.555,
      "bc": 0.489
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "method": "private boolean tooLongSinceLastLoad() {",
      "sc": 0.137,
      "bc": 0.137
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "method": "private void doWork() {",
      "sc": 0.56,
      "bc": 0.284
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "method": "public void run() {",
      "sc": 0.991,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "method": "public Object run() {",
      "sc": 0.463,
      "bc": 0.096
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "method": "public StorageStatistics provide() {",
      "sc": 0.644,
      "bc": 0.642
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeHttpServer.java",
      "method": "private Map<String, String> getAuthFilterParams(Configuration conf)",
      "sc": 0.971,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeHttpServer.java",
      "method": "private void initWebHdfs(Configuration conf) throws IOException {",
      "sc": 0.889,
      "bc": 0.801
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
      "method": "public static DataTransferThrottler getThrottler(Configuration conf) {",
      "sc": 0.36,
      "bc": 0.136
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/DataTransferThrottler.java",
      "method": "public synchronized long getBandwidth() {",
      "sc": 0.758,
      "bc": 0.432
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/DataTransferThrottler.java",
      "method": "public synchronized void throttle(long numOfBytes, Canceler canceler) {",
      "sc": 0.528,
      "bc": 0.512
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
      "method": "private boolean exceededNumBlocksPerCheck() {",
      "sc": 0.678,
      "bc": 0.678
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
      "method": "public void run() {",
      "sc": 0.446,
      "bc": 0.355
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "method": "public StorageStatistics provide() {",
      "sc": 0.988,
      "bc": 1.0
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
      "method": "public HttpURLConnection configure(HttpURLConnection conn)",
      "sc": 0.499,
      "bc": 0.155
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "method": "public boolean shouldAvoidStaleDataNodesForWrite() {",
      "sc": 0.458,
      "bc": 0.458
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "method": "public int getTotalLoad() {",
      "sc": 0.145,
      "bc": 0.142
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "method": "public boolean isAvoidingStaleDataNodesForWrite() {",
      "sc": 0.64,
      "bc": 0.366
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "method": "public int getNumDatanodesInService() {",
      "sc": 0.887,
      "bc": 0.776
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "method": "public double getInServiceXceiverAverage() {",
      "sc": 0.562,
      "bc": 0.562
    },
    {
      "file": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/window/RollingWindowManager.java",
      "method": "public TopWindow snapshot(long time) {",
      "sc": 0.306,
      "bc": 0.225
    },
    {
      "file": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/util/Metrics2Util.java",
      "method": "public boolean offer(NameValuePair entry) {",
      "sc": 0.471,
      "bc": 0.469
    }
  ]
}