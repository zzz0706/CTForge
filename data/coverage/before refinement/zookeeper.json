{
  "average_line_coverage": 0.0,
  "average_branch_coverage": 0.0,
  "details": [
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerConfig.java",
      "method": "public void parse(String[] args) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerConfig.java",
      "method": "public File getDataDir() { return dataDir; }",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java",
      "method": "public long getDataDirSize() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "protected void initializeAndRun(String[] args)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/DatadirCleanupManager.java",
      "method": "public void start() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerConfig.java",
      "method": "public File getDataLogDir() { return dataLogDir; }",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerMain.java",
      "method": "public void runFromConfig(ServerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/DatadirCleanupManager.java",
      "method": "public void start() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "protected void initializeAndRun(String[] args)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "public void start() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerConf.java",
      "method": "public int getClientPort() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerCnxnFactory.java",
      "method": "public void runFromConfig(ServerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public boolean areLocalSessionsEnabled() { return localSessionsEnabled; }",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java",
      "method": "protected void setLocalSessionFlag(Request si) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "public void runFromConfig(QuorumPeerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public boolean areLocalSessionsEnabled() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void enableLocalSessions(boolean flag) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java",
      "method": "public void createSessionTracker() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java",
      "method": "public boolean checkIfValidGlobalSession(long sess, int to) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java",
      "method": "public void createSessionTracker() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java",
      "method": "public boolean addGlobalSession(long sessionId, int sessionTimeout) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java",
      "method": "public boolean addSession(long sessionId, int sessionTimeout) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java",
      "method": "public long createSession(int sessionTimeout) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public boolean isLocalSessionsUpgradingEnabled() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void enableLocalSessionsUpgrading(boolean flag) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public boolean isLocalSessionsUpgradingEnabled() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java",
      "method": "public Request checkUpgradeSession(Request request)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public InetSocketAddress getClientPortAddress() { return clientPortAddress; }",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerMain.java",
      "method": "public void runFromConfig(ServerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "public void runFromConfig(QuorumPeerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java",
      "method": "public int getSecureClientPort() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerMain.java",
      "method": "public void runFromConfig(ServerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public InetSocketAddress getSecureClientPortAddress() { return secureClientPortAddress; }",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "public void runFromConfig(QuorumPeerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerMain.java",
      "method": "public void runFromConfig(ServerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public int getTickTime() { return tickTime; }",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "public void runFromConfig(QuorumPeerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java",
      "method": "public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws InterruptedException, IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java",
      "method": "public void waitForEpochAck(long id, StateSummary ss) throws IOException, InterruptedException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java",
      "method": "public void waitForNewLeaderAck(long sid, long zxid)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerConfig.java",
      "method": "public int getMaxClientCnxns() { return maxClientCnxns; }",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerMain.java",
      "method": "public void runFromConfig(ServerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "public void runFromConfig(QuorumPeerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java",
      "method": "private boolean doAccept() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java",
      "method": "private void select() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java",
      "method": "public void setMinSessionTimeout(int min) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java",
      "method": "public void processConnectRequest(ServerCnxn cnxn, ByteBuffer incomingBuffer) throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerMain.java",
      "method": "public void runFromConfig(ServerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java",
      "method": "public void setMaxSessionTimeout(int max) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java",
      "method": "public void processConnectRequest(ServerCnxn cnxn, ByteBuffer incomingBuffer) throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerMain.java",
      "method": "public void runFromConfig(ServerConfig config)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public void checkValidity() throws IOException, ConfigException{",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public int getInitLimit() { return initLimit; }",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java",
      "method": "protected void connectToLeader(InetSocketAddress addr, String hostname)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java",
      "method": "public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws InterruptedException, IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java",
      "method": "public void waitForEpochAck(long id, StateSummary ss) throws IOException, InterruptedException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java",
      "method": "public void waitForNewLeaderAck(long sid, long zxid)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java",
      "method": "protected void connectToLeader(InetSocketAddress addr, String hostname)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java",
      "method": "protected void syncWithLeader(long newLeaderZxid) throws Exception{",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java",
      "method": "public synchronized boolean check(long time) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
      "method": "private void setSockOpts(Socket sock) throws SocketException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public int getElectionAlg() { return electionAlg; }",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void setElectionType(int electionType) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public int getElectionType() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "protected Election createElectionAlgorithm(int electionAlgorithm){",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public synchronized void restartLeaderElection(QuorumVerifier qvOLD, QuorumVerifier qvNEW){",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void shutdown() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public Boolean getQuorumListenOnAllIPs() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "private void setupPeerType() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public LearnerType getPeerType() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void setLearnerType(LearnerType p) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "private boolean updateLearnerType(QuorumVerifier newQV) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public boolean processReconfig(QuorumVerifier qv, Long suggestedLeaderId, Long zxid, boolean restartLE) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public boolean getSyncEnabled() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void setSyncEnabled(boolean syncEnabled) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public boolean getSyncEnabled() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverZooKeeperServer.java",
      "method": "public void commitRequest(Request request) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverZooKeeperServer.java",
      "method": "protected void setupRequestProcessors() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverZooKeeperServer.java",
      "method": "public synchronized void shutdown() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public int getSnapRetainCount() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "protected void initializeAndRun(String[] args)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/DatadirCleanupManager.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public int getPurgeInterval() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "protected void initializeAndRun(String[] args)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/DatadirCleanupManager.java",
      "method": "public void start() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public static boolean isStandaloneEnabled() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public static void setStandaloneEnabled(boolean enabled) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public static boolean isReconfigEnabled() { return reconfigEnabled; }",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public static void setReconfigEnabled(boolean enabled) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public boolean processReconfig(QuorumVerifier qv, Long suggestedLeaderId, Long zxid, boolean restartLE) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java",
      "method": "protected void syncWithLeader(long newLeaderZxid) throws Exception{",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public boolean isSslQuorum() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java",
      "method": "protected void connectToLeader(InetSocketAddress addr, String hostname)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java",
      "method": "private Socket createSocket() throws X509Exception, IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java",
      "method": "public boolean shouldUsePortUnification() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
      "method": "public void run() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/common/X509Util.java",
      "method": "public void enableCertFileReloading() throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
      "method": "public void parseProperties(Properties zkProp, boolean ctest_inj , boolean inj_env_param, boolean inj_cli_port)",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void initialize() throws SaslException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void initialize() throws SaslException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void initialize() throws SaslException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void initialize() throws SaslException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java",
      "method": "public void initialize() throws SaslException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java",
      "method": "public void authenticate(Socket sock, String hostName) throws IOException {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
      "method": "public Thread newThread(Runnable r) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
      "method": "public void initiateConnectionAsync(final Socket sock, final Long sid) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
      "method": "public void receiveConnectionAsync(final Socket sock) {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    },
    {
      "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
      "method": "public void halt() {",
      "line_coverage": 0.0,
      "branch_coverage": 0.0
    }
  ]
}